@startuml
class Loan {
    # principal: float
    # amountOwed: float
    # amtPaid: float
    # interest: float
    # dueDate: LocalDate
    # dateLastPaid: LocalDate
    # dateCreated: LocalDate
    # isPaid: boolean

    + {abstract} pay(amt: float)
    + {abstract} getPaymentDifference(): float
    + {abstract} getLoanValue(): float
    + {abstract} getMonthlyInstalmentAmount(): float
    + {abstract} getName(): String
    + isOverDue(): boolean
    + missedInstalments(): boolean
    + getRemainingOwed(): float
    + getMonthsUntilDueDate(): int
    + getLoanLengthMonths(): int
    + toSaveString(): String
}

class SimpleInterestLoan {
    + LOAN_TYPE: String = "S"

    + getMonthlyInterest(): float
    + getMonthlyInstalmentAmount(): float
    + getLoanValue(): float
    + getPaymentDifference(): float
    + pay(payment: float)
    + getName(): String
}

class CompoundInterestLoan {
    + LOAN_TYPE: String = "C"

    + getMonthlyInterest(): float
    + getMonthlyInstalmentAmount(): float
    + getLoanValue(): float
    + getPaymentDifference(): float
    + pay(payment: float)
    + getName(): String
}

Loan <|-- SimpleInterestLoan
Loan <|-- CompoundInterestLoan

note top of Loan
  Common loan attributes and behaviors
  Abstract methods must be implemented
  by child classes
end note

note left of SimpleInterestLoan
  Simple interest calculation:
  Interest = P * r * t
end note

note right of CompoundInterestLoan
  Compound interest calculation:
  A = P * (1 + r)^t
end note
@enduml
